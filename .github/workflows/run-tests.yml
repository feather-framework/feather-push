name: Run tests

on:
  push:
    branches:
    - main
    paths:
    - '**.swift'
  pull_request:
    branches:
    - main

jobs:
  
  macOS-tests:
    runs-on: self-hosted
    steps:
    
    - name: Checkout
      uses: actions/checkout@v4
    
    # - name: Cache
    #   uses: actions/cache@v3
    #   with:
    #     path: server/.build
    #     key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
    #     restore-keys: ${{ runner.os }}-spm-
    
    - name: Test
      run: swift test --parallel --enable-code-coverage
  
  # linux-tests:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       image:
  #         - 'swift:5.9'
  #         - 'swift:5.10'
  #   container:
  #     image: ${{ matrix.image }}
  #   steps:
    
  #   - name: Checkout
  #     uses: actions/checkout@v4
    
  #   # - name: Cache
  #   #   uses: actions/cache@v3
  #   #   with:
  #   #     path: server/.build
  #   #     key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
  #   #     restore-keys: ${{ runner.os }}-spm-

  #   - uses: webfactory/ssh-agent@v0.9.0
  #     with:
  #       ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

  #   - name: Test
  #     shell: bash
  #     run: |
  #       mkdir ~/.ssh
  #       echo $PRIVATE_KEY > ~/.ssh/key
  #       touch ~/.ssh/config
  #       touch ~/.ssh/known_hosts
  #       echo "Host github.com" >>  ~/.ssh/config
  #       echo "  HostName github.com" >>  ~/.ssh/config
  #       echo "  User git" >>  ~/.ssh/config
  #       echo "  IdentityFile ./.ssh/key" >>  ~/.ssh/config
  #       echo "  StrictHostKeyChecking no" >>  ~/.ssh/config
  #       echo "  UserKnownHostsFile ~/.ssh/known_hosts" >>  ~/.ssh/config
  #       chmod 600 ~/.ssh/config
  #       ssh-keyscan github.com >> ~/.ssh/known_hosts
  #       eval "$(ssh-agent -s)"
  #       ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"
  #       swift test --parallel --enable-code-coverage
  #     env:
  #       PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}

